
----    Stimulus process
--stim_proc: process
--	file TestFile : text open write_mode is "Counter_test_var.txt";
--	variable OutputBuf : line;
--	variable InLine : std_logic_vector (9 downto 1);
--	variable OutLine: std_logic_vector (9 downto 1);
--   begin		
--		Q(1) <= '0';
--		Q(2) <= '0';
--		Q(3) <= '0';
--		Q(4) <= '0';
--		Q(5) <= '0';
--		Q(6) <= '0';
--		Q(7) <= '0';
--		Q(8) <= '0';
--		
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q, not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		
--		wait for 30 ns;
--		not_CCLR <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q, not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);		
--		
--		wait for 100 ns;
--		not_G <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q, not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 10 ns;
--		Q(1) <= '0';
--		Q(2) <= '0';
--		Q(3) <= '1';
--		Q(4) <= '0';
--		Q(5) <= '1';
--		Q(6) <= '1';
--		Q(7) <= '1';
--		Q(8) <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 50 ns;
--		not_RCKEN <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 20 ns;
-- 		G <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 20 ns;
--		RCK <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 10 ns;
--		not_RCKEN <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--
--		wait for 30 ns;
--		not_G <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--	
--		wait for 5 ns;
--		not_CLOAD <= '0';		
--		RCK <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 10 ns;
--	   not_CLOAD <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--
--		wait for 10 ns;
--		Q(1) <= 'Z';
--		Q(2) <= 'Z';
--		Q(3) <= 'Z';
--		Q(4) <= 'Z';
--		Q(5) <= 'Z';
--		Q(6) <= 'Z';
--		Q(7) <= 'Z';
--		Q(8) <= 'Z';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 10 ns;
--		G <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 90 ns;
--		not_CCKEN <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 50 ns;
--		CCKEN <= '1';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--		
--		wait for 50 ns;
--		not_CCKEN <= '0';
--		wait for 5 ns;
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--      wait;
--   end process;
--	
--	clock_process: process 
--	begin
--		wait for 400 ns;
--		Clock(CCK, clock_period/2, clock_period/2);
--	end process;
--	
--	process(CCK) is
--	file TestFile : text open write_mode is "Counter_test_var_1.txt";
--	variable OutputBuf : line;
--	variable InLine : std_logic_vector (9 downto 1);
--	variable OutLine: std_logic_vector (9 downto 1);
--	begin
--		WriteSignalsToFile(inLine, outLine, G, not_G, not_CCLR, CCKEN, not_CCKEN, CCK, not_CLOAD, not_RCKEN, RCK, Q , not_RCO);
--		write(OutputBuf, std_logic_vector'(inLine));
--		write(OutputBuf, std_logic_vector'(outLine));
--		writeline(TestFile, OutputBuf);
--	end process;